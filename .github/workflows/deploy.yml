name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/datax-backend:latest

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          port: 32222
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          script: |
            cd /home/overall/vsp/multi/multi-team-dev-deployment

            # Stop old container
            docker compose -f docker-compose.yml down

            # Set secrets as environment variables for docker compose
            export OPENROUTER_API_BASE=${{ secrets.OPENROUTER_API_BASE }}
            export OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}
            export JWT_SECRET=${{ secrets.JWT_SECRET }}
            export DATAX_MONGO_URI=${{ secrets.DATAX_MONGO_URI }}
            export DATAX_MONGO_COLLECTION_NAME=${{ secrets.DATAX_MONGO_COLLECTION_NAME }}
            export DATAX_MONGO_DB_NAME=${{ secrets.DATAX_MONGO_DB_NAME }}
            export FRONTEND_URL=${{ secrets.FRONTEND_URL }}
            export SESSION_SECRET_KEY=${{ secrets.SESSION_SECRET_KEY }}
            export DATAX_MINIO_ACCESS_KEY=${{ secrets.DATAX_MINIO_ACCESS_KEY }}
            export DATAX_MINIO_SECRET_KEY=${{ secrets.DATAX_MINIO_SECRET_KEY }}
            export DATAX_MINIO_ENDPOINT=${{ secrets.DATAX_MINIO_ENDPOINT }}
            export DATAX_MINIO_BUCKET_SHEETS=${{ secrets.DATAX_MINIO_BUCKET_SHEETS }}
            export DATAX_MINIO_BUCKET_UPLOADS=${{ secrets.DATAX_MINIO_BUCKET_UPLOADS }}

            # Pull latest image and start new container
            docker compose -f docker-compose.yml up -d --pull always

            echo "âœ… Deployment successful!"
