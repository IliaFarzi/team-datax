# .github/workfows/datax-deploy-backend-dev.yml
name: datax-deploy-backend-dev
on:
  push:
    branches:
      - main
    paths:
      - 'api/**'
      - '.github/workflows/datax-deploy-backend-dev.yml'
      - 'team-datax/docker-compose-dev.yml'


jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/datax-backend-dev:latest

      - name: Show built image digest
        run: echo "✅ Dev image digest = ${{ steps.build.outputs.digest }}"

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Copy docker-compose-dev.yml to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEV_VPS_HOST }}
          username: ${{ secrets.DEV_VPS_USERNAME }}
          port: ${{ secrets.DEV_VPS_PORT }}
          key: ${{ secrets.DEV_VPS_KEY }}
          source: "team-datax/docker-compose-dev.yml"
          target: "/home/datax-backend"

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_VPS_HOST }}
          username: ${{ secrets.DEV_VPS_USERNAME }}
          port: ${{ secrets.DEV_VPS_PORT }}
          key: ${{ secrets.DEV_VPS_KEY }}
          script: |
            cd /home/datax-backend
            echo "AUTH_JWT_SECRET=${{ secrets.DEV_AUTH_JWT_SECRET }}" > .env.datax
            echo "AUTH_SESSION_SECRET=${{ secrets.DEV_AUTH_SESSION_SECRET }}" >> .env.datax

            echo "DB_MONGO_URI=${{ secrets.DEV_DB_MONGO_URI }}" >> .env.datax
            echo "DB_MONGO_NAME=${{ secrets.DEV_DB_MONGO_NAME }}" >> .env.datax
            echo "DB_MONGO_COLLECTION_CHAT_SESSIONS=${{ secrets.DEV_DB_MONGO_COLLECTION_CHAT_SESSIONS }}" >> .env.datax
            echo "DB_MONGO_COLLECTION_USERS=${{ secrets.DEV_DB_MONGO_COLLECTION_USERS }}" >> .env.datax

            echo "STORAGE_MINIO_ENDPOINT=${{ secrets.DEV_STORAGE_MINIO_ENDPOINT }}" >> .env.datax
            echo "STORAGE_MINIO_ACCESS_KEY=${{ secrets.DEV_STORAGE_MINIO_USERNAME }}" >> .env.datax
            echo "STORAGE_MINIO_SECRET_KEY=${{ secrets.DEV_STORAGE_MINIO_PASSWORD }}" >> .env.datax
            echo "STORAGE_MINIO_SECURE=${{ secrets.DEV_STORAGE_MINIO_SECURE }}" >> .env.datax
            echo "STORAGE_MINIO_BUCKET_SHEETS=${{ secrets.DEV_STORAGE_MINIO_BUCKET_SHEETS }}" >> .env.datax
            echo "STORAGE_MINIO_BUCKET_UPLOADS=${{ secrets.DEV_STORAGE_MINIO_BUCKET_UPLOADS }}" >> .env.datax

            echo "AUTH_GOOGLE_CLIENT_ID=${{ secrets.DEV_AUTH_GOOGLE_CLIENT_ID }}" >> .env.datax
            echo "AUTH_GOOGLE_CLIENT_SECRET=${{ secrets.DEV_AUTH_GOOGLE_CLIENT_SECRET }}" >> .env.datax
            echo "AUTH_GOOGLE_PROJECT_ID=${{ secrets.DEV_AUTH_GOOGLE_PROJECT_ID }}" >> .env.datax
            echo "AUTH_GOOGLE_URI_AUTH=${{ secrets.DEV_AUTH_GOOGLE_URI_AUTH }}" >> .env.datax
            echo "AUTH_GOOGLE_URI_TOKEN=${{ secrets.DEV_AUTH_GOOGLE_URI_TOKEN }}" >> .env.datax
            echo "AUTH_GOOGLE_URI_CERTS=${{ secrets.DEV_AUTH_GOOGLE_URI_CERTS }}" >> .env.datax

            echo "MAIL_SMTP_HOST=${{ secrets.DEV_MAIL_SMTP_HOST }}" >> .env.datax
            echo "MAIL_SMTP_PORT=${{ secrets.DEV_MAIL_SMTP_PORT }}" >> .env.datax
            echo "MAIL_SMTP_USER=${{ secrets.DEV_MAIL_SMTP_USER }}" >> .env.datax
            echo "MAIL_SMTP_PASSWORD=${{ secrets.DEV_MAIL_SMTP_PASSWORD }}" >> .env.datax
            echo "MAIL_FROM_NAME=${{ secrets.DEV_MAIL_FROM_NAME }}" >> .env.datax
            echo "MAIL_FROM_ADDRESS=${{ secrets.DEV_MAIL_FROM_ADDRESS }}" >> .env.datax

            echo "LLM_OPENROUTER_API_BASE=${{ secrets.DEV_LLM_OPENROUTER_API_BASE }}" >> .env.datax
            echo "LLM_OPENROUTER_API_KEY=${{ secrets.DEV_LLM_OPENROUTER_API_KEY }}" >> .env.datax
            echo "MODEL_NAME=${{ secrets.DEV_MODEL_NAME }}" >> .env.datax

            echo "FRONTEND_URL=${{ secrets.DEV_FRONTEND_URL }}" >> .env.datax
            echo "VPS_URL=${{ secrets.DEV_VPS_URL }}" >> .env.datax
            echo "VPS_HOST=${{ secrets.DEV_VPS_HOST }}" >> .env.datax
            echo "VPS_USERNAME=${{ secrets.DEV_VPS_USERNAME }}" >> .env.datax
            echo "VPS_PORT=${{ secrets.DEV_VPS_PORT }}" >> .env.datax
            echo "CORS_CONNECTION=${{ secrets.DEV_CORS_CONNECTION }}" >> .env.datax
            echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> .env.datax
            echo "DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }}" >> .env.datax
            
            docker rm -f datax-backend || true
            docker image prune -af || true
            docker compose -f docker-compose-dev.yml pull --ignore-pull-failures
            docker compose -f docker-compose-dev.yml up -d --force-recreate
            echo " ✅ Deployment successful! Visit: ${{ secrets.DEV_VPS_URL }}"